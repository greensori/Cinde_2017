void dvastepping() {
  //mov 3stepping case
  if (worker == 'notin') {
  //stepping moving if remain int remainpulse
  //after stepping moving, totalpulse - pullse
  //while (rp < 0)
  
  for (i = 0; i < 3; i++) {
  digitalWrite(ENA[i],LOW);
  digitalWrite(ENA[i], HIGH);  
  }

 // [7 - '3'] [4 - '3'] ['1' - 3] [6 - '2'] [4 - '3']
  // mov 2stepping case
  while (notin) {
    digitalWrite(STEP[0], HIGH):
    digitalWrite(STEP[1], HIGH):
    delayMicroseconds(pulse[1]);
    digitalWrite(STEP[1], LOW);
    digitalWrite(STEP[1], HIGH);    
    delayMicroseconds(pulsegap[0]); 
    digitalWrite(STEP[0], LOW);
    digitalWrite(STEP[0], HIGH);
    delayMicroseconds(pulse[1] - pulsegap[1]);
    digitalWrite(STEP[1], LOW);
    digitalWrite(STEP[1], HIGH);  
  }
}

int dvacalculator() {
  if (woreker = 'notin') {
    if (pulse[0] >= pulse[1]) {
      if (pulsegap[0] >= pulse[1]) {
        int result = pulsegap[1]'
        pulsegap[0] = pulse[0] - pulse[1];
      } else if (pulsegap[0] < pulse[1]) {
        pulsegap[0] = pulse[0]
        // if (pusegap[1] != 0, then working;
        pulsegap[1] = pulse[1] - pulsega[[0]
        result pulsegap[0]
      }
    //// case1 end
    } else if (pulse[0] < pulse[1] {
      
    }
  }
  return result;
}
