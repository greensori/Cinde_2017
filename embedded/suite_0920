#include "green.h"

#define baudrate 115200
#define sumStep 3

const int ENA[sumStep] = {22, 32, 40};
const int DIR[sumStep] = {26, 36, 44};
const int STEP[sumStep] = {27, 37, 45};

const int digit[3] = {1000, 100, 10};

// if count value under 0 then stepping running, and initiate
int count = 4;
int pulse = 0;
char ch;

int preventdoubleENA = 0;

int pinno;
int setdir;

int i;

green green(0);

void setup() {
  Serial.begin(baudrate);
  for (i= 0; i < sumStep; i++) {
    pinMode(ENA[i], OUTPUT);
    digitalWrite(ENA[i], HIGH);
    pinMode(DIR[i], OUTPUT);     
    pinMode(STEP[i], OUTPUT);
  }  
}

void loop() {
  if (Serial.available() > 0 ) {
    ch = Serial.read();
    if (ch >= 48 && ch <= 57) {
      pulse += green.digitno(ch, count);
      count -= 1;
      if (count == 0) {
        count = 4;
       }
      }else if (preventdoubleENA == 1) {
        if (65 <= ch && ch <=90) {
          setdir = 1;
          pinno = (ch - 65);
        } else if (97 <= ch && ch <= 122) {
          setdir = 2;
          pinno = (ch - 97);
        }
        delayMicroseconds(pulse);
        green.idle(STEP[pinno], DIR[pinno], setdir);
      } else if (ch == 33) {
        for ( i = 0; i < sumStep; i++) {
          green.active(ENA[i], STEP[i]);
        }
        preventdoubleENA = 1;
      }
    } else {
      green.tester(ENA[2], STEP[2], 800);
      /*
      if (preventdoubleENA != 2) {
        preventdoubleENA = 2;
        for ( i = 0; i < sumStep; i++) {
          green.Terminal(ENA[i], STEP[i]);
        }
      }
      */
   } // # serial end
}
